/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public List<Interval> merge(List<Interval> intervals) {
        if (intervals == null || intervals.size() == 1) {
            return intervals;
        }
        
        Collections.sort(intervals, new Comparator<Interval>(){
            public int compare(Interval i1, Interval i2) {
                return Integer.compare(i1.start,i2.start);
            }
        });
        
        ArrayList<Interval> list = new ArrayList<>();
        for (int i = 0; i < intervals.size(); i++) {
            Interval tmp = intervals.get(i);
            while (i + 1 < intervals.size() && intervals.get(i+1).start <= tmp.end) {
                tmp.end = Math.max(tmp.end,intervals.get(i+1).end);
                i++;
            }
            list.add(tmp);
        }
        return list;
    }
}
