class Solution {
    public int myAtoi(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        
        int i = 0;
        int sign = 1;
        int result = 0;
        
        // discard white spaces
        while(i < s.length() && s.charAt(i) == ' ') {
            i++;
        }
        
        // check if optional sign exists
        if (i < s.length() && (s.charAt(i) == '+' || s.charAt(i) == '-')) {
            sign = (s.charAt(i++) == '-') ? -1 : 1;
        }
        
        // Build the result
        while (i < s.length() && s.charAt(i) >= '0' && s.charAt(i) <= '9') {
            if (result > Integer.MAX_VALUE / 10 || (result == Integer.MAX_VALUE / 10 && s.charAt(i) - '0' > Integer.MAX_VALUE % 10)) {
                return (sign == 1) ? Integer.MAX_VALUE : Integer.MIN_VALUE;
            }
            result = result * 10 + s.charAt(i++) - '0';
        }
        return result * sign;
    }
}

/*
** questions 1 input s, contains space + - .
** string to i, integer. So dot won't consider
** remove leading spaces
**
** 43e -> 43
** +3e -> 3
** -3e -> -3

** out of range? use long then convert to int
** don't forget to check last result

** as leading 0?

** java related syntax:
** Integer.MAX_VALUE, Integer.MIN_VALUE, s.charAt(i) - '0', s.charAt(i) == ' '
*/
